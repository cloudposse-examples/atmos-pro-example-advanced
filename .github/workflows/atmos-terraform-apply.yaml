name: ðŸ‘½ Atmos Terraform Apply
run-name: apply ${{ inputs.component }}/${{ inputs.stack }}/${{ inputs.atmos_pro_run_id}}

on:
  workflow_dispatch:
    inputs:
      component:
        description: "Atmos Component"
        type: string
      stack:
        description: "Atmos Stack"
        type: string
      sha:
        description: "Commit SHA"
        type: string
      environment:
        description: "GitHub environment"
        type: string
      atmos_pro_run_id:
        description: "Atmos Pro Run ID"
        type: string

concurrency:
  group: "${{ inputs.component }}-${{ inputs.stack }}"
  cancel-in-progress: false # Do not cancel apply in progress to avoid locking state

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    name: Plan ${{ inputs.stack }} ${{ inputs.component }}
    runs-on:
      - "ubuntu-latest"
    steps:
      # If retrieve action is moved, then we can delete this
      - name: Checkout
        uses: actions/checkout@v4

      - name: Retrieve Plan
        uses: ./.github/actions/retrieve-plan
        with:
          component: ${{ inputs.component }}
          stack: ${{ inputs.stack }}
          sha: ${{ inputs.sha }}
          atmos-version: ${{ vars.ATMOS_VERSION }}
          atmos-config-path: ${{ vars.ATMOS_CONFIG_PATH }}

      # Plan now if the plan doesnt already exist
      - name: Plan Atmos Component
        if: ${{ !steps.retrieve-plan.outputs.exists }}
        uses: cloudposse/github-action-atmos-terraform-plan@v2
        with:
          component: ${{ inputs.component }}
          stack: ${{ inputs.stack }}
          sha: ${{ inputs.sha }}
          atmos-version: ${{ vars.ATMOS_VERSION }}
          atmos-config-path: ${{ vars.ATMOS_CONFIG_PATH }}

  apply:
    name: Apply ${{ inputs.stack }} ${{ inputs.component }}
    environment: ${{ inputs.environment }}
    runs-on:
      - "ubuntu-latest"
    needs:
      - plan
    steps:
      - name: Apply Atmos Component
        uses: cloudposse/github-action-atmos-terraform-apply@v2
        with:
          component: ${{ inputs.component }}
          stack: ${{ inputs.stack }}
          sha: ${{ inputs.sha }}
          atmos-version: ${{ vars.ATMOS_VERSION }}
          atmos-config-path: ${{ vars.ATMOS_CONFIG_PATH }}
